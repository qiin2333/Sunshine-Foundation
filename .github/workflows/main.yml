name: Build and Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build_win:
    name: Windows
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Move Repo
        shell: pwsh
        run: |
          cd ..
          cp -r Sunshine-Foundation ../Sunshine

      - name: Setup Dependencies Windows
        # if a dependency needs to be pinned, see https://github.com/LizardByte/build-deps/pull/186
        uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          update: true
          install: >-
            wget

      - name: Update Windows dependencies
        env:
          gcc_version: "14.2.0-3"
        shell: msys2 {0}
        working-directory: ../../Sunshine
        run: |
          broken_deps=(
            "mingw-w64-ucrt-x86_64-gcc"
            "mingw-w64-ucrt-x86_64-gcc-libs"
          )

          tarballs=""
          for dep in "${broken_deps[@]}"; do
            tarball="${dep}-${gcc_version}-any.pkg.tar.zst"

            # download and install working version
            wget https://repo.msys2.org/mingw/ucrt64/${tarball}

            tarballs="${tarballs} ${tarball}"
          done

          # install broken dependencies
          if [ -n "$tarballs" ]; then
            pacman -U --noconfirm ${tarballs}
          fi

          # install dependencies
          dependencies=(
            "git"
            "mingw-w64-ucrt-x86_64-cmake"
            "mingw-w64-ucrt-x86_64-cppwinrt"
            "mingw-w64-ucrt-x86_64-curl-winssl"
            "mingw-w64-ucrt-x86_64-graphviz"
            "mingw-w64-ucrt-x86_64-MinHook"
            "mingw-w64-ucrt-x86_64-miniupnpc"
            "mingw-w64-ucrt-x86_64-nlohmann-json"
            "mingw-w64-ucrt-x86_64-nodejs"
            "mingw-w64-ucrt-x86_64-nsis"
            "mingw-w64-ucrt-x86_64-onevpl"
            "mingw-w64-ucrt-x86_64-openssl"
            "mingw-w64-ucrt-x86_64-opus"
            "mingw-w64-ucrt-x86_64-toolchain"
          )

          pacman -Syu --noconfirm --ignore="$(IFS=,; echo "${broken_deps[*]}")" "${dependencies[@]}"

      - name: Install Doxygen
        # GCC compiled doxygen has issues when running graphviz
        env:
          DOXYGEN_VERSION: "1.11.0"
        working-directory: ../../Sunshine
        run: |
          # Set version variables
          $doxy_ver = $env:DOXYGEN_VERSION
          $_doxy_ver = $doxy_ver.Replace(".", "_")

          # Download the Doxygen installer
          Invoke-WebRequest -Uri `
            "https://github.com/doxygen/doxygen/releases/download/Release_${_doxy_ver}/doxygen-${doxy_ver}-setup.exe" `
            -OutFile "doxygen-setup.exe"

          # Run the installer
          Start-Process `
            -FilePath .\doxygen-setup.exe `
            -ArgumentList `
              '/VERYSILENT' `
          -Wait `
          -NoNewWindow

          # Clean up
          Remove-Item -Path doxygen-setup.exe

      - name: Build Windows
        shell: msys2 {0}
        working-directory: ../../Sunshine
        env:
          BRANCH: ${{ github.head_ref || github.ref_name }}
        run: |
          mkdir -p build
          cmake \
            -B build \
            -G Ninja \
            -S . \
            -DBUILD_DOCS=OFF \
            -DSUNSHINE_ASSETS_DIR=assets
          ninja -C build

      - name: Move Artifacts
        shell: pwsh
        run: |
          mkdir build
          cd build
          cp -r ../../../Sunshine/build/* ./

      # - name: Package Windows
      #   shell: msys2 {0}
      #   run: |
      #     mkdir -p artifacts
      #     cd build

      #     # package
      #     cpack -G NSIS
      #     cpack -G ZIP

      #     # move
      #     mv ./cpack_artifacts/Sunshine.exe ../artifacts/sunshine-windows-installer.exe
      #     mv ./cpack_artifacts/Sunshine.zip ../artifacts/sunshine-windows-portable.zip

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/
          if-no-files-found: error

      - name: Upload Packaged Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sunshine-windows
          path: artifacts/
          if-no-files-found: error

      - name: Upload Single Executable
        uses: actions/upload-artifact@v4
        with:
          name: sunshine
          path: build/sunshine.exe
          if-no-files-found: error
